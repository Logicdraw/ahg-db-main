"""empty message

Revision ID: 91b60088371c
Revises: ba9222e52ac8
Create Date: 2021-08-05 16:48:38.135394

"""
from alembic import op
import sqlalchemy as sa
import main.utils


# revision identifiers, used by Alembic.
revision = '91b60088371c'
down_revision = 'ba9222e52ac8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('camp_instances_camp_instance_registrations',
    sa.Column('created_on', main.utils.sqlalchemy.AwareDateTime(), server_default=sa.text("timezone('utc'::text, now())"), nullable=True),
    sa.Column('updated_on', main.utils.sqlalchemy.AwareDateTime(), server_default=sa.text("timezone('utc'::text, now())"), nullable=True),
    sa.Column('camp_instance_id', sa.Integer(), nullable=False),
    sa.Column('camp_instance_registration_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['camp_instance_id'], ['camp_instances.id'], ),
    sa.ForeignKeyConstraint(['camp_instance_registration_id'], ['camp_instance_registrations.id'], ),
    sa.PrimaryKeyConstraint('camp_instance_id', 'camp_instance_registration_id')
    )
    op.create_table('program_instances_program_instance_registrations',
    sa.Column('created_on', main.utils.sqlalchemy.AwareDateTime(), server_default=sa.text("timezone('utc'::text, now())"), nullable=True),
    sa.Column('updated_on', main.utils.sqlalchemy.AwareDateTime(), server_default=sa.text("timezone('utc'::text, now())"), nullable=True),
    sa.Column('program_instance_id', sa.Integer(), nullable=False),
    sa.Column('program_instance_registration_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['program_instance_id'], ['program_instances.id'], ),
    sa.ForeignKeyConstraint(['program_instance_registration_id'], ['program_instance_registrations.id'], ),
    sa.PrimaryKeyConstraint('program_instance_id', 'program_instance_registration_id')
    )
    op.create_table('team_instance_registration_invites',
    sa.Column('created_on', main.utils.sqlalchemy.AwareDateTime(), server_default=sa.text("timezone('utc'::text, now())"), nullable=True),
    sa.Column('updated_on', main.utils.sqlalchemy.AwareDateTime(), server_default=sa.text("timezone('utc'::text, now())"), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email_to', sa.String(), nullable=True),
    sa.Column('has_registered', sa.Boolean(), nullable=True),
    sa.Column('team_instance_id', sa.Integer(), nullable=True),
    sa.Column('team_instance_registration_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['team_instance_id'], ['team_instances.id'], ),
    sa.ForeignKeyConstraint(['team_instance_registration_id'], ['team_instance_registrations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_instance_registration_invites_email_to'), 'team_instance_registration_invites', ['email_to'], unique=False)
    op.create_index(op.f('ix_team_instance_registration_invites_id'), 'team_instance_registration_invites', ['id'], unique=False)
    op.create_table('team_instances_team_instance_registrations',
    sa.Column('created_on', main.utils.sqlalchemy.AwareDateTime(), server_default=sa.text("timezone('utc'::text, now())"), nullable=True),
    sa.Column('updated_on', main.utils.sqlalchemy.AwareDateTime(), server_default=sa.text("timezone('utc'::text, now())"), nullable=True),
    sa.Column('team_instance_id', sa.Integer(), nullable=False),
    sa.Column('team_instance_registration_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_instance_id'], ['team_instances.id'], ),
    sa.ForeignKeyConstraint(['team_instance_registration_id'], ['team_instance_registrations.id'], ),
    sa.PrimaryKeyConstraint('team_instance_id', 'team_instance_registration_id')
    )
    op.drop_constraint('camp_instance_registrations_camp_instance_id_fkey', 'camp_instance_registrations', type_='foreignkey')
    op.drop_column('camp_instance_registrations', 'camp_instance_id')
    op.drop_constraint('program_instance_registrations_program_instance_id_fkey', 'program_instance_registrations', type_='foreignkey')
    op.drop_column('program_instance_registrations', 'program_instance_id')
    op.drop_constraint('team_instance_registrations_team_instance_id_fkey', 'team_instance_registrations', type_='foreignkey')
    op.drop_column('team_instance_registrations', 'team_instance_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('team_instance_registrations', sa.Column('team_instance_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('team_instance_registrations_team_instance_id_fkey', 'team_instance_registrations', 'team_instances', ['team_instance_id'], ['id'])
    op.add_column('program_instance_registrations', sa.Column('program_instance_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('program_instance_registrations_program_instance_id_fkey', 'program_instance_registrations', 'program_instances', ['program_instance_id'], ['id'])
    op.add_column('camp_instance_registrations', sa.Column('camp_instance_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('camp_instance_registrations_camp_instance_id_fkey', 'camp_instance_registrations', 'camp_instances', ['camp_instance_id'], ['id'])
    op.drop_table('team_instances_team_instance_registrations')
    op.drop_index(op.f('ix_team_instance_registration_invites_id'), table_name='team_instance_registration_invites')
    op.drop_index(op.f('ix_team_instance_registration_invites_email_to'), table_name='team_instance_registration_invites')
    op.drop_table('team_instance_registration_invites')
    op.drop_table('program_instances_program_instance_registrations')
    op.drop_table('camp_instances_camp_instance_registrations')
    # ### end Alembic commands ###
